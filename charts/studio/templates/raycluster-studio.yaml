{{- if .Values.ray.enabled -}}
apiVersion: ray.io/v1alpha1
kind: RayCluster
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: {{ .Release.Name }}-ray
spec:
  rayVersion: {{ .Values.ray.version }}
  enableInTreeAutoscaling: true
  autoscalerOptions:
    upscalingMode: Default
    idleTimeoutSeconds: 60
    imagePullPolicy: IfNotPresent
    resources:
      resources:
        cpu: 500m
        memory: 500M
      resources:
        cpu: 500m
        memory: 500M
  headGroupSpec:
    rayStartParams:
      dashboard-host: 0.0.0.0
    template:
      spec:
        containers:
        - name: head
          image: {{ .Values.ray.image }}
          resources:
            requests:
              cpu: {{ .Values.ray.head.resources.cpu }}
              memory: {{ .Values.ray.head.resources.memory }}
            limits:
              cpu: {{ .Values.ray.head.resources.cpu }}
              memory: {{ .Values.ray.head.resources.memory }}
          ports:
          - containerPort: 6379
            name: gcs
          - containerPort: 8265
            name: dashboard
          - containerPort: 10001
            name: client
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","ray stop"]
  workerGroupSpecs:
  - replicas: {{ .Values.ray.worker.replicas.minimum }}
    minReplicas: {{ .Values.ray.worker.replicas.minimum }}
    maxReplicas: {{ .Values.ray.worker.replicas.maximum }}
    groupName: workers
    rayStartParams: {}
    template:
      spec:
        containers:
        - name: worker
          image: {{ .Values.ray.image }}
          resources:
            requests:
              cpu: {{ .Values.ray.worker.resources.cpu }}
              memory: {{ .Values.ray.worker.resources.memory }}
            limits:
              cpu: {{ .Values.ray.worker.resources.cpu }}
              memory: {{ .Values.ray.worker.resources.memory }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "ray stop"]
{{- end }}
