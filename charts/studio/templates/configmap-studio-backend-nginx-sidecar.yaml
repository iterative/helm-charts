{{- if and .Values.global.basePath (not (eq .Values.global.basePath "/")) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-backend-nginx-sidecar
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;

    events {
      worker_connections  1024;
    }

    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
      '$status $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /dev/stdout  main;
      error_log  /dev/stdout info;

      sendfile        on;
      tcp_nopush     on;

      server_tokens off;

      keepalive_timeout  65;

      gzip  on;


      include /etc/nginx/conf.d/*.conf;
    }
  default.conf: |
    server {
        listen       80;
        server_name  _;
        access_log /dev/stdout;
        error_log /dev/stdout debug;

        {{- if and .Values.global.basePath (not (eq .Values.global.basePath "/")) }}
        rewrite /{{ include "studio.basePath" . }}/(.*) /$1 break;
        {{- end }}

        location / {
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://studio;
        }
    }

    upstream studio {
      server 127.0.0.1:8000;
    }

    # Health check endpoint
    server {
      access_log  /dev/null  main;
      error_log  /dev/null info;

      listen 8080;
      location / {
            return 200 'OK';
      }
    }
{{- end }}
