apiVersion: v1
kind: Secret
metadata:
  name: studio
  annotations:
    "helm.sh/resource-policy": "keep"
  labels:
    {{- include "studio.labels" . | nindent 4 }}
type: Opaque
data:
  {{- if .Values.global.scmProviders.gitlab.clientId }}
  gitlabClientId: {{ .Values.global.scmProviders.gitlab.clientId | b64enc }}
  {{- end }}

  {{- if .Values.global.scmProviders.gitlab.secretKey }}
  gitlabSecretKey: {{ .Values.global.scmProviders.gitlab.secretKey | b64enc }}
  {{- end }}

  {{- if .Values.global.scmProviders.gitlab.webhookSecret }}
  gitlabWebhookSecret: {{ .Values.global.scmProviders.gitlab.webhookSecret | b64enc }}
  {{- end }}

  {{- if .Values.global.scmProviders.github.clientId }}
  githubClientId: {{ .Values.global.scmProviders.github.clientId | b64enc }}
  {{- end }}

  {{- if .Values.global.scmProviders.github.appId }}
  githubAppId: {{ .Values.global.scmProviders.github.appId | b64enc }}
  {{- end }}

  {{- if .Values.global.scmProviders.github.appSecret }}
  githubAppSecret: {{ .Values.global.scmProviders.github.appSecret | b64enc }}
  {{- end }}

  {{- if .Values.global.scmProviders.github.privateKey }}
  githubPrivateKey: {{ .Values.global.scmProviders.github.privateKey | b64enc }}
  {{- end }}

  {{- if .Values.global.scmProviders.github.webhookSecret }}
  githubWebhookSecret: {{ .Values.global.scmProviders.github.webhookSecret | b64enc }}
  {{- end }}

  # Set secretKey to existing value or generate a random one
  {{- if .Values.global.secretKey }}
  secretKey: {{ .Values.global.secretKey | b64enc }}
  {{- else }}
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "studio") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $secretKey := (get $secretData "secretKey") | default (randAscii 40 | b64enc) }}
  secretKey: {{ $secretKey | quote }}
  {{- end }}
  
  {{- if .Values.global.postgres.databaseUser }}
  postgresDatabaseUser: {{ .Values.global.postgres.databaseUser | b64enc }}
  {{- end }}
  
  {{- if .Values.global.postgres.databasePassword }}
  postgresDatabasePassword: {{ .Values.global.postgres.databasePassword | b64enc }}
  {{- end }}

  {{- if .Values.global.blobvault.accessKeyId }}
  blobvaultAccessKeyId: {{ .Values.global.blobvault.accessKeyId | b64enc }}
  {{- end }}

  {{- if .Values.global.blobvault.secretAccessKeyId }}
  blobvaultSecretAccessKeyId: {{ .Values.global.blobvault.secretAccessKeyId | b64enc }}
  {{- end }}

  {{- if .Values.global.scmProviders.bitbucket.secretKey }}
  bitbucketSecretKey: {{ .Values.global.scmProviders.bitbucket.secretKey | b64enc }}
  {{- end }}

  {{- if .Values.global.scmProviders.bitbucket.clientId }}
  bitbucketClientId: {{ .Values.global.scmProviders.bitbucket.clientId | b64enc }}
  {{- end }}
