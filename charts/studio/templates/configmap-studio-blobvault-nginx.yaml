{{ if not .Values.global.blobvault.bucket }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-blobvault-nginx
data:
  default.conf: |
    server {
        listen       80;
        server_name  _;
        access_log /dev/stdout;
        error_log /dev/stdout debug;

        root /blobvault;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Studio-Trace-Id';

        {{- if and .Values.global.basePath (not (eq .Values.global.basePath "/")) }}
        rewrite /{{ include "studio.basePath" . }}/blobvault/(.*) /$1 break;
        {{- else }}
        rewrite /blobvault/(.*) /$1 break;
        {{- end }}

        location ~ \.gz$ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'GET') {
                add_header Content-Encoding gzip;
            }
            gzip off;
            types { } default_type "application/json";
        }


        location /blobvault {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            gzip on;

            try_files $uri $uri/ =404;
        }
    }
    server {
      access_log  /dev/null  main;
      error_log  /dev/null info;

      listen 8080;
      location / {
            return 200 'OK';
      }
    }
{{- end }}
