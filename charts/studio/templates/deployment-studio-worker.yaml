apiVersion: apps/v1
kind: Deployment
metadata:
  name: studio-worker
  labels:
    {{- include "studio-worker.labels" . | nindent 4 }}
spec:
  {{- if not .Values.studioWorker.autoscaling.enabled }}
  replicas: {{ .Values.studioWorker.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "studio-worker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap-studio-worker: {{ include (print $.Template.BasePath "/configmap-studio-worker.yaml") . | sha256sum }}
        {{- include "studio.checksum" . | indent 8 }}
        {{- with .Values.studioWorker.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "studio-worker.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "studio.serviceAccountName" . }}
      securityContext:
        fsGroup: 103
        fsGroupChangePolicy: "OnRootMismatch"
        {{- with .Values.studioWorker.podSecurityContext }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: studio-worker
          securityContext:
            {{- toYaml .Values.studioWorker.securityContext | nindent 12 }}
          image: "{{ .Values.studioBackend.image.repository }}:{{ .Values.studioBackend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.studioBackend.image.pullPolicy }}
          args: ["/app/bin/run_celery_worker.sh"]
          resources:
            {{- toYaml .Values.studioWorker.resources | nindent 12 }}
          env:
            - name: "NO_MIGRATE_DB"
              value: "1"
            - name: "WAIT_FOR_MIGRATIONS"
              value: "1"
          envFrom:
            - configMapRef:
                name: studio
            - configMapRef:
                name: studio-worker
            - secretRef:
                name: studio
            {{- if .Values.global.envFromSecret }}
            - secretRef:
                name: {{ .Values.global.envFromSecret }}
            {{- end }}
            {{- if .Values.studioWorker.envFromSecret }}
            - secretRef:
                name: {{ .Values.studioWorker.envFromSecret }}
            {{- end }}
          volumeMounts:
            {{- if .Values.global.blobvault.bucket }}
            - name: blobvault
              mountPath: /blobvault
            {{- end }}
            - name: studio-ca-certificates
              mountPath: /usr/local/share/ca-certificates
      volumes:
        {{- if .Values.global.blobvault.bucket }}
        - name: blobvault
          persistentVolumeClaim:
            claimName: blobvault
        {{- end }}
        - name: studio-ca-certificates
          configMap:
            name: studio-ca-certificates
      {{- with .Values.studioWorker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.studioWorker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.studioWorker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
