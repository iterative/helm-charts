# Default values for studio.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Secret containing Docker registry credentials
imagePullSecrets: []

global:
  # -- Studio: Url
  url: "http://studio.example.com"
  # -- Studio: Maximum number of views
  maxViews: "100"
  # -- Studio: Maximum number of teams
  maxTeams: "10"
  # -- Studio: Secret key for encryption
  secretKey: ""

  # -- Studio: Custom CA certificate in PEM format
  # customCaCert: |-
  #   -----BEGIN CERTIFICATE-----
  #   ....
  #   -----END CERTIFICATE-----
  #
  customCaCert: ""

  blobvault:
    # -- Blobvault S3 bucket name
    bucket: "iterativeai"
    # -- Blobvault S3 endpoint URL for backend
    endpointUrl: ""
    # -- Blobvault S3 endpoint URL for frontend
    endpointUrlFe: ""
    # -- Blobvault S3 access key ID
    accessKeyId: "admin"
    # -- Blobvault S3 secret access key ID
    secretAccessKeyId: "password"

  celery:
    # -- Celery broker URL
    brokerUrl: ""
    # -- Celery result URL
    resultBackend: ""


  ingress:
    enabled: true
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    tlsEnabled: false
    tlsSecretName: chart-example-tls

  postgres:
    # -- Postgres database URL
    databaseUrl: "studio-postgresql:5432/iterativeai"
    # -- Postgres database user
    databaseUser: "postgres"
    # -- Postgres database password
    databasePassword: "postgres"

  scmProviders:
    # Enable SSL for webhooks
    enableWebhookSSL: true

    github:
      # -- GitHub enabled
      enabled: false

      # -- GitHub Enterprise URL
      # Set this if you're using the selfhosted version
      url: ""
      # -- GitHub Enterprise API URL
      # Set this if you're using the selfhosted version
      apiUrl: ""

      # -- GitHub OAuth App Client ID
      clientId: ""
      # -- GitHub OAuth App Name
      appName: ""
      # -- GitHub OAuth App ID
      appId: ""
      # -- GitHub OAuth App Secret
      appSecret: ""
      # -- GitHub OAuth App Private Key
      privateKey: ""

      # -- GitHub Webhook URL  
      webhookUrl: ""
      # -- GitHub Webhook secret
      webhookSecret: ""

    gitlab:
      # -- GitLab enabled
      enabled: false

      # -- GitLab Enterprise Edition URL
      # Set this if you're using the selfhosted version
      url: ""

      # -- GitLab OAuth App Client ID
      clientId: ""
      # -- GitLab OAuth App Secret Key
      secretKey: ""

      # -- GitLab Webhook URL
      webhookUrl: ""
      # -- GitLab Webhook Secret
      webhookSecret: ""

    bitbucket:
      # -- Bitbucket enabled
      enabled: false

      # -- Bitbucket Server URL
      # Set this if you're using the selfhosted version
      url: ""
      # -- Bitbucket Server API URL
      # Set this if you're using the selfhosted version
      apiUrl: ""

      # -- Bitbucket OAuth App Client ID
      clientId: ""
      # -- Bitbucket OAuth App Secret Key
      secretKey: ""

      # -- Bitbucket Webhook URL
      webhookUrl: ""


# Dependencies
minio:
  # -- Minio enabled
  enabled: true
  # -- Minio name override
  fullnameOverride: studio-minio

  # Change this before deploying
  auth:
    # -- Minio root user
    rootUser: admin
    # -- Minio root password
    rootPassword: password

  provisioning:
    # -- Minio buckets to provision
    buckets:
      - iterativeai

redis:
  # -- Redis enabled
  enabled: true
  # -- Redis name override
  fullnameOverride: studio-redis

  auth:
    # -- Redis authentication enabled
    enabled: false

postgresql:
  # -- Postgres enabled
  enabled: true
  # -- Postgres name override
  fullnameOverride: studio-postgresql

  # Change this before deploying
  global:
    postgresql:
      auth:
        # -- Postgres password
        postgresPassword: postgres
        # -- Postgres database
        database: iterativeai

studioUi:
  replicaCount: 1

  image:
    repository: docker.iterative.ai/viewer_ui
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    # tag: "v1.34.0"

  service:
    type: ClusterIP
    port: 3000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nameOverride: ""

  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  nodeSelector: {}

  tolerations: []

  affinity: {}

studioBackend:
  replicaCount: 1

  image:
    repository: docker.iterative.ai/viewer_backend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    # tag: "v1.34.0"

  service:
    type: ClusterIP
    port: 8000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nameOverride: ""

  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  nodeSelector: {}

  tolerations: []

  affinity: {}

studioBeat:
  replicaCount: 1

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nameOverride: ""

  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  nodeSelector: {}

  tolerations: []

  affinity: {}

studioWorker:
  replicaCount: 1

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nameOverride: ""

  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  nodeSelector: {}

  tolerations: []

  affinity: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
