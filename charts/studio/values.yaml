# Default values for studio.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Secret containing Docker registry credentials
imagePullSecrets: []

global:
  # -- Studio: Hostname for accessing Studio (no http(s) scheme)
  host: "studio.example.com"
  # -- Studio: Base path (prefix)
  basePath: ""
  # -- Studio: Maximum number of views
  maxViews: "100"
  # -- Studio: Maximum number of teams
  maxTeams: "10"
  # -- Studio: Secret key for signing Webhook payloads
  # We recommend you set this externally. If left empty, a random key will be generated.
  secretKey: ""

  # Deprecated in favor of `customCaCerts`
  # -- Studio: Custom CA certificate in PEM format
  # customCaCert: |-
  #   -----BEGIN CERTIFICATE-----
  #   ....
  #   -----END CERTIFICATE-----
  #
  customCaCert: ""

  # -- Studio: Custom CA certificate in PEM format
  # customCaCerts:
  # - |-
  #     -----BEGIN CERTIFICATE-----
  #     ....
  #     -----END CERTIFICATE-----
  #
  customCaCerts: []


  # -- Studio: Additional environment variables for all pods
  envVars: {}
  # Example:
  # envVars:
  #   DEBUG: "True"

  blobvault:
    # -- Blobvault local backing store size
    persistentVolume:
      accessModes:
        - ReadWriteOnce
      storageClassName: local-path
      size: 30Gi

    # -- Blobvault S3 bucket name
    bucket: ""
    # -- Blobvault S3 endpoint URL
    endpointUrl: ""
    # -- Blobvault S3 access key ID
    accessKeyId: ""
    # -- Blobvault S3 secret access key ID
    secretAccessKeyId: ""
    # -- Blobvault S3 region
    regionName: ""

  celery:
    # -- Celery broker URL
    brokerUrl: ""
    # -- Celery result URL
    resultBackend: ""

  ingress:
    enabled: true
    hostnameEnabled: true
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    tlsEnabled: false
    tlsSecretName: chart-example-tls

  postgres:
    # -- (DEPRECATED) Postgres database URL
    databaseUrl: ""
    # -- (DEPRECATED) Postgres database user
    databaseUser: ""
    # -- (DEPRECATED) Postgres database password
    databasePassword: ""

    # -- Postgres hostname
    host: "studio-postgresql"
    # -- Postgres port
    port: "5432"
    # -- Postgres database name
    databaseName: "iterativeai"
    # -- Postgres user
    user: "postgres"
    # -- Postgres password
    password: "postgres"

  scmProviders:
    github:
      # -- GitHub enabled
      enabled: false

      # -- GitHub Enterprise URL
      # Set this if you're using the selfhosted version
      url: ""
      # -- GitHub Enterprise API URL
      # Set this if you're using the selfhosted version
      apiUrl: ""


      # -- GitHub OAuth App Name
      appName: ""
      # -- GitHub OAuth App ID
      appId: ""
      # -- GitHub OAuth App Client ID
      clientId: ""
      # -- GitHub OAuth App Secret
      clientSecret: ""
      # -- GitHub OAuth App Private Key
      privateKey: ""

      # -- GitHub Webhook URL, e.g. https://<global.host>/webhook/github/
      webhookUrl: ""

    gitlab:
      # -- GitLab enabled
      enabled: false

      # -- GitLab Enterprise Edition URL
      # Set this if you're using the selfhosted version
      url: ""

      # -- GitLab OAuth App Client ID
      clientId: ""
      # -- GitLab OAuth App Secret Key
      secretKey: ""

      # -- GitLab Webhook URL
      webhookUrl: ""
      # -- GitLab Webhook Secret
      webhookSecret: ""

    bitbucket:
      # -- Bitbucket enabled
      enabled: false

      # -- Bitbucket Server URL
      # Set this if you're using the selfhosted version
      url: ""
      # -- Bitbucket Server API URL
      # Set this if you're using the selfhosted version
      apiUrl: ""

      # -- Bitbucket OAuth App Client ID
      clientId: ""
      # -- Bitbucket OAuth App Secret Key
      secretKey: ""

      # -- Bitbucket Webhook URL
      webhookUrl: ""

nginx:
  service:
    type: ClusterIP

  ingress:
    enabled: false

  extraVolumes:
  - name: blobvault
    persistentVolumeClaim:
      claimName: blobvault

  extraVolumeMounts:
  - name: blobvault
    mountPath: /blobvault

  serverBlock: |-
    server {
        listen       8080;
        server_name  _;

        root /blobvault;

        location ~ \.gz$ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                #
                # Cookies
                #
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Studio-Trace-Id';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Studio-Trace-Id';
                add_header Content-Encoding gzip;
            }
            gzip off;
            types { } default_type "application/json";
        }


        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                #
                # Cookies
                #
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Studio-Trace-Id';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Studio-Trace-Id';
            }

            try_files $uri $uri/ =404;
        }
    }

redis:
  # -- Redis enabled
  enabled: true
  # -- Redis name override
  fullnameOverride: studio-redis

  auth:
    # -- Redis authentication enabled
    enabled: false

postgresql:
  # -- Postgres enabled
  enabled: true
  # -- Postgres name override
  fullnameOverride: studio-postgresql

  # Change this before deploying
  global:
    postgresql:
      auth:
        # -- Postgres password
        postgresPassword: postgres
        # -- Postgres database
        database: iterativeai

studioUi:
  # -- Studio: Additional environment variables for ui pods
  envVars: {}
  # Example:
  # envVars:
  #   DEBUG: "True"

  replicaCount: 1

  image:
    repository: docker.iterative.ai/viewer_ui
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    # tag: "v1.34.0"

  service:
    type: ClusterIP
    port: 3000

  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nameOverride: ""

  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  nodeSelector: {}

  tolerations: []

  affinity: {}

studioBackend:
  # -- Studio: Additional environment variables for backend pods
  envVars: {}
  # Example:
  # envVars:
  #   DEBUG: "True"

  replicaCount: 1

  image:
    repository: docker.iterative.ai/viewer_backend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    # tag: "v1.34.0"

  service:
    type: ClusterIP
    port: 8000

  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nameOverride: ""

  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  nodeSelector: {}

  tolerations: []

  affinity: {}

studioBeat:
  # -- Studio: Additional environment variables for beat pods
  envVars: {}
  # Example:
  # envVars:
  #   DEBUG: "True"

  replicaCount: 1

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nameOverride: ""

  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  nodeSelector: {}

  tolerations: []

  affinity: {}

studioWorker:
  # -- Studio: Additional environment variables for worker pods
  envVars: {}
  # Example:
  # envVars:
  #   DEBUG: "True"

  replicaCount: 1

  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nameOverride: ""

  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  nodeSelector: {}

  tolerations: []

  affinity: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
